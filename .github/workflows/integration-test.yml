name: Run integration tests

on:
  workflow_dispatch:
    inputs:
      database1:
        description: 'Database (v1) - a new one will be created if not provided'
        required: false
        default: ''
      database2:
        description: 'Database (v2) - a new one will be created if not provided'
        required: false
        default: ''
      engine2:
        description: 'Engine (v2) - a new one will be created if not provided'
        required: false
      account:
        description: 'Account'
        required: true
        default: 'developer'
      environment:
        description: 'Environment to run the tests against'
        type: choice
        required: true
        default: 'staging'
        options:
          - dev
          - staging

jobs:
  run-integration-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Validate database and engine
        if: ${{ (github.event.inputs.database2 == '') != (github.event.inputs.engine2 == '') }}
        uses: actions/github-script@v3
        with:
          script: |
            core.setFailed("Database and Engine parameters should be provided simultaneously")

      - name: "Foresight: Collect Workflow Telemetry"
        uses: runforesight/foresight-workflow-kit-action@v1
        if: ${{ always() }}
      - name: Check out code
        uses: actions/checkout@v3

      - name: Prepare java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Determine env variables
        run: |
          if [ "${{ github.event.inputs.environment }}" == 'staging' ]; then
             echo "USERNAME=${{ secrets.FIREBOLT_USERNAME_STAGING }}" >> "$GITHUB_ENV"
             echo "PASSWORD=${{ secrets.FIREBOLT_PASSWORD_STAGING }}" >> "$GITHUB_ENV"
             echo "SERVICE_ACCOUNT_ID=${{ secrets.FIREBOLT_CLIENT_ID_STG_NEW_IDN }}" >> "$GITHUB_ENV"
             echo "SERVICE_ACCOUNT_SECRET=${{ secrets.FIREBOLT_CLIENT_SECRET_STG_NEW_IDN }}" >> "$GITHUB_ENV"
          else
             echo "USERNAME=${{ secrets.FIREBOLT_USERNAME_DEV }}" >> "$GITHUB_ENV"
             echo "PASSWORD=${{ secrets.FIREBOLT_PASSWORD_DEV }}" >> "$GITHUB_ENV"
             echo "SERVICE_ACCOUNT_ID=${{ secrets.FIREBOLT_CLIENT_ID_NEW_IDN }}" >> "$GITHUB_ENV"
             echo "SERVICE_ACCOUNT_SECRET=${{ secrets.FIREBOLT_CLIENT_SECRET_NEW_IDN }}" >> "$GITHUB_ENV"
          fi
      - name: Setup database and engine (v1)
        id: setup1
        if: ${{ github.event.inputs.database == '' }}
        uses: firebolt-db/integration-testing-setup@v1
        with:
          firebolt-username: ${{ env.USERNAME }}
          firebolt-password: ${{ env.PASSWORD }}
          api-endpoint: "api.${{ github.event.inputs.environment }}.firebolt.io"
          region: "us-east-1"
          instance-type: "B2"
      - name: Setup database and engine (v2)
        id: setup2
        if: ${{ github.event.inputs.database == '' }}
        uses: firebolt-db/integration-testing-setup@v2
        with:
          firebolt-client-id: ${{ env.SERVICE_ACCOUNT_ID }}
          firebolt-client-secret: ${{ env.SERVICE_ACCOUNT_SECRET }}
          account: ${{ github.event.inputs.account }}
          api-endpoint: "api.${{ github.event.inputs.environment }}.firebolt.io"
          instance-type: "B2"

      - name: Determine database (v1) name
        id: find-database-name1
        run: |
          if ! [[ -z "${{ github.event.inputs.database1 }}" ]]; then
             echo "database_name1=${{ github.event.inputs.database1 }}" >> $GITHUB_OUTPUT
          else
             echo "database_name1=${{ steps.setup.outputs.database_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Determine database (v2) name
        id: find-database-name2
        run: |
          if ! [[ -z "${{ github.event.inputs.database2 }}" ]]; then
             echo "database_name1=${{ github.event.inputs.database2 }}" >> $GITHUB_OUTPUT
          else
             echo "database_name1=${{ steps.setup.outputs.database_name2 }}" >> $GITHUB_OUTPUT
          fi

      - name: Determine engine (v2) name
        id: find-engine-name2
        run: |
          if ! [[ -z "${{ github.event.inputs.engine2 }}" ]]; then
             echo "engine_name2=${{ github.event.inputs.engine2 }}" >> $GITHUB_OUTPUT
          else
             echo "engine_name2=${{ steps.setup.outputs.engine_name2 }}" >> $GITHUB_OUTPUT
          fi

      - name: Run integration tests (v1)
        run: ./gradlew integrationTest -Ddb=${{ steps.find-database-name.outputs.database_name1 }} -Dapi=api.${{ github.event.inputs.environment }}.firebolt.io -Dpassword="${{ env.SERVICE_ACCOUNT_SECRET }}" -Duser="${{ env.SERVICE_ACCOUNT_ID }}" -DincludeTags="common,v1"

      - name: Run integration tests (v2)
        run: ./gradlew integrationTest -Ddb=${{ steps.find-database-name.outputs.database_name2 }} -Denv=${{ github.event.inputs.environment }} -Dclient_secret="${{ env.SERVICE_ACCOUNT_SECRET }}" -Dclient_id="${{ env.SERVICE_ACCOUNT_ID }}" -Daccount="${{ github.event.inputs.account }}" -Dengine="${{ steps.find-engine-name.outputs.engine_name2 }}" -DincludeTags="common,v2"

      - name: "Foresight: Analyze Test Results"
        uses: runforesight/foresight-test-kit-action@v1
        if: success() || failure()
        with:
          test_format: JUNIT
          test_framework: JUNIT
          test_path: ./build/test-results/
          tags: |
            type:"integration"
            language:"Java"
